/*
 * This file is generated by jOOQ.
*/
package com.family.structure.tables.daos;


import com.family.structure.tables.Employee;
import com.family.structure.tables.records.EmployeeRecord;

import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EmployeeDao extends DAOImpl<EmployeeRecord, com.family.structure.tables.pojos.Employee, Integer> {

    /**
     * Create a new EmployeeDao without any configuration
     */
    public EmployeeDao() {
        super(Employee.EMPLOYEE, com.family.structure.tables.pojos.Employee.class);
    }

    /**
     * Create a new EmployeeDao with an attached configuration
     */
    public EmployeeDao(Configuration configuration) {
        super(Employee.EMPLOYEE, com.family.structure.tables.pojos.Employee.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Integer getId(com.family.structure.tables.pojos.Employee object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.family.structure.tables.pojos.Employee> fetchById(Integer... values) {
        return fetch(Employee.EMPLOYEE.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.family.structure.tables.pojos.Employee fetchOneById(Integer value) {
        return fetchOne(Employee.EMPLOYEE.ID, value);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<com.family.structure.tables.pojos.Employee> fetchByName(String... values) {
        return fetch(Employee.EMPLOYEE.NAME, values);
    }

    /**
     * Fetch records that have <code>modify_flag IN (values)</code>
     */
    public List<com.family.structure.tables.pojos.Employee> fetchByModifyFlag(Integer... values) {
        return fetch(Employee.EMPLOYEE.MODIFY_FLAG, values);
    }
}
